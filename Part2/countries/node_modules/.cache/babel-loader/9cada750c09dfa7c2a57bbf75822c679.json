{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexw\\\\OneDrive\\\\Documents\\\\AlexW Code\\\\Full-Stack-Answers\\\\Part2\\\\countries\\\\src\\\\components\\\\Country.js\";\nimport React from 'react';\nimport Weather from './Weather';\n\nconst Country = ({\n  c,\n  handleClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [c.name, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(c.name),\n      children: \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}; //thers a logic error weather is initially undefined bc it is pushed into queue and waits for return statements i think\n//bc we call the weather component we run it without ever finishing the get request to server\n\n\n_c = Country;\n\nconst Solo = ({\n  single,\n  handleWeather\n}) => {\n  //refactor into seperate component too long\n  const weather = handleWeather(single.capital);\n  console.log(weather);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: single.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital \", single.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"population \", single.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: single.languages.map(l => /*#__PURE__*/_jsxDEV(Language, {\n        language: l\n      }, single.alpha3Code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: single.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital \", single.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"population \", single.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: single.languages.map(l => /*#__PURE__*/_jsxDEV(Language, {\n        language: l\n      }, single.alpha3Code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: single.flag,\n      alt: single.name + ' flag'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Solo;\n\nconst Language = ({\n  language\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: language.nativeName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Language;\n\nconst Countries = ({\n  result,\n  handleClick,\n  handleWeather\n}) => {\n  if (result.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [result.length, \" matches, please specify a better filter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  } else if (result.length === 1) {\n    console.log('only one search result');\n    return /*#__PURE__*/_jsxDEV(Solo, {\n      single: result[0],\n      handleWeather: handleWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  } //b/tw 1-10\n\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: result.map(c => /*#__PURE__*/_jsxDEV(Country, {\n      c: c,\n      handleClick: handleClick\n    }, c.alpha3Code, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Countries;\nexport default Countries;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Solo\");\n$RefreshReg$(_c3, \"Language\");\n$RefreshReg$(_c4, \"Countries\");","map":{"version":3,"sources":["C:/Users/alexw/OneDrive/Documents/AlexW Code/Full-Stack-Answers/Part2/countries/src/components/Country.js"],"names":["React","Weather","Country","c","handleClick","name","Solo","single","handleWeather","weather","capital","console","log","population","languages","map","l","alpha3Code","flag","Language","language","nativeName","Countries","result","length"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Weather from './Weather';\r\n\r\nconst Country = ({c, handleClick}) => {\r\n    return (\r\n        <li>\r\n            {c.name} \r\n            <button onClick = {() => handleClick(c.name)}> \r\n            show\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n//thers a logic error weather is initially undefined bc it is pushed into queue and waits for return statements i think\r\n//bc we call the weather component we run it without ever finishing the get request to server\r\nconst Solo = ({ single, handleWeather }) => { //refactor into seperate component too long\r\n    const weather = handleWeather(single.capital);\r\n    console.log(weather)\r\n    \r\n        return (\r\n            <>\r\n                <h1>{single.name}</h1>\r\n                <p>capital {single.capital}</p>\r\n                <p>population {single.population}</p>\r\n                <h3>languages</h3>\r\n                <ul>\r\n                    {single.languages.map(l => <Language key = {single.alpha3Code} language={l} />)}\r\n                </ul>\r\n             {/*  <img src={single.flag} alt = {single.name + ' flag'}></img>*/}   \r\n                <Weather weather = {weather}/> \r\n            </>\r\n        )\r\n    \r\n    return (\r\n        <>\r\n            <h1>{single.name}</h1>\r\n            <p>capital {single.capital}</p>\r\n            <p>population {single.population}</p>\r\n            <h3>languages</h3>\r\n            <ul>\r\n                {single.languages.map(l => <Language key = {single.alpha3Code} language={l} />)}\r\n            </ul>\r\n\r\n            <img src={single.flag} alt = {single.name + ' flag'}></img>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Language = ({ language }) => {\r\n    return (\r\n        <li>\r\n            {language.nativeName}\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Countries = ({ result, handleClick, handleWeather}) => {\r\n    if (result.length > 10) {\r\n        return (\r\n            <p>{result.length} matches, please specify a better filter</p>\r\n        )\r\n    }\r\n    \r\n    else if (result.length === 1) {\r\n        console.log('only one search result');\r\n        return <Solo single = {result[0]} handleWeather = {handleWeather} />\r\n    }\r\n    //b/tw 1-10\r\n    return (\r\n        <ul>\r\n            {result.map(c => <Country key={c.alpha3Code} c={c} handleClick = {handleClick} />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Countries;"]},"metadata":{},"sourceType":"module"}