{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alexw\\\\OneDrive\\\\Documents\\\\AlexW Code\\\\Full-Stack-Answers\\\\Part2\\\\countries\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Form from './components/SearchForm';\nimport Countries from './components/Country';\n\nconst matchSearch = (name, search) => {\n  //if they type in a \\ escape character at end it breaks it\n  return name.match(new RegExp(search, 'i'));\n};\n\nconst WEATHERAPIKEY = process.env.REACT_APP_WEATHER_API_KEY;\nconsole.log(WEATHERAPIKEY);\n\nconst App = () => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [showSearch, hasSearched] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [weather, setWeather] = useState({});\n\n  const countryHook = () => {\n    //get the json back from the endpoint\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log('status for getting countries', response.status);\n      setCountries(response.data);\n      console.log(response.data);\n    });\n  };\n\n  const getWeather = query => {\n    axios.get(`http://api.weatherstack.com/current? access_key = ${WEATHERAPIKEY} & query = ${query}`) //tempelate string\n    .then(response => {\n      console.log('status of getting weather', response.status);\n      console.log(response.data);\n      setWeather(response.data);\n    });\n  };\n\n  useEffect(countryHook, []);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n    hasSearched(true);\n  };\n\n  const handleClick = name => {\n    console.log('they clicked to show');\n    setSearch(name);\n    getWeather(name);\n  };\n\n  const getResults = () => {\n    countries.forEach(c => {\n      if (c.name.toUpperCase() === search.toUpperCase()) {\n        console.log(c);\n        return c;\n      }\n    });\n    return countries.filter(c => matchSearch(c.name, search));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      newSearch: search,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      result: showSearch ? getResults() : countries,\n      handleClick: handleClick,\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"zrxFbdQB0SgD+OH/H0/LTi4aE1o=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alexw/OneDrive/Documents/AlexW Code/Full-Stack-Answers/Part2/countries/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","Form","Countries","matchSearch","name","search","match","RegExp","WEATHERAPIKEY","process","env","REACT_APP_WEATHER_API_KEY","console","log","App","setSearch","showSearch","hasSearched","countries","setCountries","weather","setWeather","countryHook","get","then","response","status","data","getWeather","query","handleSearch","event","target","value","handleClick","getResults","forEach","c","toUpperCase","filter","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios'\nimport Form from './components/SearchForm';\nimport Countries from './components/Country'\n\nconst matchSearch = (name, search) => {\n  //if they type in a \\ escape character at end it breaks it\n  return name.match(new RegExp(search, 'i'))\n}\nconst WEATHERAPIKEY = process.env.REACT_APP_WEATHER_API_KEY;\nconsole.log(WEATHERAPIKEY)\nconst App = () => {\n  \n  const [search, setSearch] = useState('')\n  const [showSearch, hasSearched] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [weather, setWeather] = useState({});\n  \n  const countryHook = () => { //get the json back from the endpoint\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        console.log('status for getting countries', response.status)\n        setCountries(response.data)\n        console.log(response.data)\n      })\n  }\n\n  const getWeather = (query) => {\n    axios\n    .get(`http://api.weatherstack.com/current? access_key = ${WEATHERAPIKEY} & query = ${query}`) //tempelate string\n    .then(response => {\n      console.log('status of getting weather', response.status)\n      console.log(response.data)\n      setWeather(response.data)\n    })\n  }\n\n  useEffect(countryHook, [])\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n    hasSearched(true)\n  }\n\n  const handleClick = (name) => {\n    console.log('they clicked to show')\n    setSearch(name)\n    getWeather(name)\n  }\n\n\n  const getResults = () => {\n    countries.forEach(c=> {\n      if(c.name.toUpperCase() === search.toUpperCase()){\n        console.log(c)\n        return c;\n      }\n    })\n    return countries.filter(c => matchSearch(c.name, search));\n  }\n\n\n  return (\n    <>\n      <Form newSearch={search} handleSearch={handleSearch} />\n      <Countries result={showSearch ? getResults() : countries} handleClick = {handleClick} weather = {weather}/>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"]},"metadata":{},"sourceType":"module"}