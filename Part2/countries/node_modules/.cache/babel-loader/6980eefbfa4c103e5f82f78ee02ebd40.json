{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexw\\\\OneDrive\\\\Documents\\\\AlexW Code\\\\Full-Stack-Answers\\\\Part2\\\\countries\\\\src\\\\components\\\\Country.js\";\nimport React from 'react';\nimport Weather from './Weather';\n\nconst Countries = ({\n  result,\n  handleClick\n}) => {\n  if (result.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [result.length, \" matches, please specify a better filter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  } else if (result.length === 1) {\n    return /*#__PURE__*/_jsxDEV(Solo, {\n      single: result[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: result.map(c => /*#__PURE__*/_jsxDEV(Country, {\n      c: c,\n      handleClick: handleClick\n    }, c.alpha3Code, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Countries;\n\nconst Solo = ({\n  single\n}) => {\n  //only start query if there is a single country displayed \n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: single.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital \", single.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"population \", single.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: single.languages.map(l => /*#__PURE__*/_jsxDEV(Language, {\n        language: l\n      }, single.alpha3Code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: single.flag,\n      alt: single.name + ' flag',\n      width: '200 px'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {\n      query: single.capital\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Solo;\n\nconst Country = ({\n  c,\n  handleClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [c.name, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(c.name),\n      children: \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Country;\n\nconst Language = ({\n  language\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: language.nativeName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Language;\nexport default Countries;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Countries\");\n$RefreshReg$(_c2, \"Solo\");\n$RefreshReg$(_c3, \"Country\");\n$RefreshReg$(_c4, \"Language\");","map":{"version":3,"sources":["C:/Users/alexw/OneDrive/Documents/AlexW Code/Full-Stack-Answers/Part2/countries/src/components/Country.js"],"names":["React","Weather","Countries","result","handleClick","length","map","c","alpha3Code","Solo","single","name","capital","population","languages","l","flag","Country","Language","language","nativeName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAC3C,MAAID,MAAM,CAACE,MAAP,GAAgB,EAApB,EAAwB;AACpB,wBACI;AAAA,iBAAIF,MAAM,CAACE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAMK,IAAIF,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AAC1B,wBAAO,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF,MAAM,CAAC,CAAD;AAApB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,cACKA,MAAM,CAACG,GAAP,CAAWC,CAAC,iBAAI,QAAC,OAAD;AAA4B,MAAA,CAAC,EAAEA,CAA/B;AAAkC,MAAA,WAAW,EAAEH;AAA/C,OAAcG,CAAC,CAACC,UAAhB;AAAA;AAAA;AAAA;AAAA,YAAhB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;KAAMN,S;;AAkBN,MAAMO,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAE;AAE3B,sBACI;AAAA,4BACI;AAAA,gBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BAAYD,MAAM,CAACE,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gCAAeF,MAAM,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBACKH,MAAM,CAACI,SAAP,CAAiBR,GAAjB,CAAqBS,CAAC,iBAAI,QAAC,QAAD;AAAkC,QAAA,QAAQ,EAAEA;AAA5C,SAAeL,MAAM,CAACF,UAAtB;AAAA;AAAA;AAAA;AAAA,cAA1B;AADL;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAK,MAAA,GAAG,EAAEE,MAAM,CAACM,IAAjB;AAAuB,MAAA,GAAG,EAAEN,MAAM,CAACC,IAAP,GAAc,OAA1C;AAAmD,MAAA,KAAK,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA,YARJ,eAUM,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED,MAAM,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAVN;AAAA,kBADJ;AAiBH,CAnBD;;MAAMH,I;;AAqBN,MAAMQ,OAAO,GAAG,CAAC;AAAEV,EAAAA,CAAF;AAAKH,EAAAA;AAAL,CAAD,KAAwB;AACpC,sBACI;AAAA,eACKG,CAAC,CAACI,IADP,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMP,WAAW,CAACG,CAAC,CAACI,IAAH,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;MAAMM,O;;AAWN,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,sBACI;AAAA,cACKA,QAAQ,CAACC;AADd;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMF,Q;AAQN,eAAehB,SAAf","sourcesContent":["import React from 'react'\r\nimport Weather from './Weather';\r\n\r\n\r\nconst Countries = ({ result, handleClick }) => {\r\n    if (result.length > 10) {\r\n        return (\r\n            <p>{result.length} matches, please specify a better filter</p>\r\n        )\r\n    }\r\n\r\n    else if (result.length === 1) {\r\n        return <Solo single={result[0]} />\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {result.map(c => <Country key={c.alpha3Code} c={c} handleClick={handleClick} />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst Solo = ({ single }) => { //only start query if there is a single country displayed \r\n\r\n    return (\r\n        <>\r\n            <h1>{single.name}</h1>\r\n            <p>capital {single.capital}</p>\r\n            <p>population {single.population}</p>\r\n            <h3>languages</h3>\r\n            <ul>\r\n                {single.languages.map(l => <Language key={single.alpha3Code} language={l} />)}\r\n            </ul>\r\n            <img src={single.flag} alt={single.name + ' flag'} width={'200 px'}></img>\r\n\r\n            { <Weather query={single.capital} />}\r\n\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst Country = ({ c, handleClick }) => {\r\n    return (\r\n        <li>\r\n            {c.name}\r\n            <button onClick={() => handleClick(c.name)}>\r\n                show\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Language = ({ language }) => {\r\n    return (\r\n        <li>\r\n            {language.nativeName}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Countries;"]},"metadata":{},"sourceType":"module"}