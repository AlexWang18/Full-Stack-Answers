[{"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\index.js":"1","C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\components\\Note.js":"2","C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\services\\NoteService.js":"3","C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\components\\Notification.js":"4","C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\index.js":"5","C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\components\\Note.js":"6","C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\components\\Notification.js":"7","C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\services\\NoteService.js":"8"},{"size":3018,"mtime":1609700239485,"results":"9","hashOfConfig":"10"},{"size":377,"mtime":1609697713396,"results":"11","hashOfConfig":"10"},{"size":1073,"mtime":1609689086934,"results":"12","hashOfConfig":"10"},{"size":277,"mtime":1609697952584,"results":"13","hashOfConfig":"10"},{"size":3410,"mtime":1609701540517,"results":"14","hashOfConfig":"15"},{"size":377,"mtime":1609697713396,"results":"16","hashOfConfig":"15"},{"size":277,"mtime":1609697952584,"results":"17","hashOfConfig":"15"},{"size":1073,"mtime":1609859782786,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ivi7dk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"jw8776",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\index.js",["38"],"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\components\\Note.js",[],"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\services\\NoteService.js",["39"],"import axios from 'axios'\r\n\r\nconst baseURL = 'http://localhost:3001/notes'\r\n\r\n//returning the response / promise from db\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    const nonExisting = {\r\n        id: 10304, \r\n        content: 'this note is not in the db',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true\r\n    }\r\n    return request\r\n        .then(response => response.data.concat(nonExisting)) //still returns a promise, then function returns a promise, \"promise chaining\"\r\n}\r\n\r\nconst create = (noteObj) => {\r\n    const request = axios.post(baseURL, noteObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, changedNote) => {\r\n    return axios.put(`${baseURL}/${id}`, changedNote).then(response => response.data)\r\n}\r\n\r\nconst clear = () => {\r\n    const data = {\r\n        //key value pairs of th enotes?\r\n    }\r\n\r\n    axios.delete(baseURL)\r\n}\r\n\r\nconst ns = {\r\n    getAll,\r\n    create, \r\n    update,\r\n    clear\r\n}\r\n\r\n//returns an object with all 3 of the functions as properties, \r\nexport default ns\r\n\r\n",["40","41"],"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\Part2\\notes2\\src\\components\\Notification.js",[],"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\index.js",[],["42","43"],"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\components\\Note.js",[],"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\components\\Notification.js",[],"C:\\Users\\alexw\\OneDrive\\Documents\\AlexW Code\\Full-Stack-Answers\\part2\\notes2\\src\\services\\NoteService.js",[],{"ruleId":"44","severity":1,"message":"45","line":20,"column":24,"nodeType":"46","messageId":"47","endLine":20,"endColumn":39},{"ruleId":"44","severity":1,"message":"48","line":28,"column":11,"nodeType":"46","messageId":"47","endLine":28,"endColumn":15},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},"no-unused-vars","'setErrorMessage' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-global-assign","no-unsafe-negation"]